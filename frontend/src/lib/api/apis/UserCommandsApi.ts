/* tslint:disable */
/* eslint-disable */
/**
 * User Management API
 * API for user management and chat service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  UserSignUpPayload,
  UserView,
} from '../models/index';
import {
    UserSignUpPayloadFromJSON,
    UserSignUpPayloadToJSON,
    UserViewFromJSON,
    UserViewToJSON,
} from '../models/index';

export interface SignUpUserRequest {
    userSignUpPayload: UserSignUpPayload;
}

/**
 * 
 */
export class UserCommandsApi extends runtime.BaseAPI {

    /**
     * Creates a new user with the provided details.
     * Sign up a new user
     */
    async signUpUserRaw(requestParameters: SignUpUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UserView>> {
        if (requestParameters['userSignUpPayload'] == null) {
            throw new runtime.RequiredError(
                'userSignUpPayload',
                'Required parameter "userSignUpPayload" was null or undefined when calling signUpUser().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/users/sign-up`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: UserSignUpPayloadToJSON(requestParameters['userSignUpPayload']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => UserViewFromJSON(jsonValue));
    }

    /**
     * Creates a new user with the provided details.
     * Sign up a new user
     */
    async signUpUser(requestParameters: SignUpUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UserView> {
        const response = await this.signUpUserRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
